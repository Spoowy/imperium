(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{124:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return s}));var i=n(1),a=n(6),r=(n(138),n(137)),o={id:"clientModule",title:"Client Module Definition",sidebar_label:"Client Module"},l={id:"old/clientModule",title:"Client Module Definition",description:"Modules can provide client-side logic.",source:"@site/../docs/old/ClientModule.md",permalink:"/imperium/docs/old/clientModule",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/../docs/old/ClientModule.md",sidebar_label:"Client Module"},c=[{value:"name",id:"name",children:[]},{value:"initialState",id:"initialstate",children:[]},{value:"startup",id:"startup",children:[]},{value:"hocs",id:"hocs",children:[]},{value:"routes",id:"routes",children:[]},{value:"fragments",id:"fragments",children:[]}],u={rightToc:c};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(i.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Modules can provide client-side logic."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-javascript"}),"export default function MyModuleName() {\n    return {\n        // Required\n        name, // [String] Name of the module\n\n        // Core\n        initialState, // [Function]\n        startup, // [Function]\n        hocs, // [Array of Functions]\n\n        // Router\n        routes, // [Array of Route Objects]\n\n        // Graphql\n        fragments,\n    };\n}\n")),Object(r.b)("h2",{id:"name"},"name"),Object(r.b)("p",null,"The string name of the module. You can import directly from the ",Object(r.b)("inlineCode",{parentName:"p"},"package.json")," file if you want."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),"const {name} = require('./package.json');\n")),Object(r.b)("h2",{id:"initialstate"},"initialState"),Object(r.b)("p",null,"A function that is called when the client is initially being configured. It receives the\ninitial config values and the current initialState. Remember: initial state is being constructed\nduring this ",Object(r.b)("inlineCode",{parentName:"p"},"initialState")," phase and is dependant on what modules are currently loaded and what the loading\norder is. It should return an object that will be merged in to initialState."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-javascript"}),"function initialState(initialConfig, currentInitialState) {\n    return {\n        myInitialStateValue: 'value',\n    };\n}\n")),Object(r.b)("h2",{id:"startup"},"startup"),Object(r.b)("p",null,"A function that is called once on client startup. ie. Page refresh.\nIt can optionally return an object that is passed as props to the RouteDirector component."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-javascript"}),"function startup(client: ImperiumClient) {\n    return {\n        myRootProp: 'value',\n    };\n}\n")),Object(r.b)("h2",{id:"hocs"},"hocs"),Object(r.b)("p",null,"An array of functions that create higher order components that will wrap the root components."),Object(r.b)("h1",{id:"router"},"Router"),Object(r.b)("h2",{id:"routes"},"routes"),Object(r.b)("p",null,"An array of route objects.\nSee ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"routes"}),"Routes")," for more information."),Object(r.b)("h1",{id:"graphql"},"Graphql"),Object(r.b)("h2",{id:"fragments"},"fragments"))}s.isMDXComponent=!0}}]);